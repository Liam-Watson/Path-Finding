{"version":3,"sources":["components/Node.js","components/searchingContext.js","components/Menu.js","algorithms/dijkstra.js","functions/menuClick.js","components/Plane.js","App.js","reportWebVitals.js","index.js"],"names":["Node","props","state","this","setState","past","wall","onMouseDown","click","checked","over","move","x","y","mouseDown","id","isStart","isEnd","mouseOn","mouseUp","blockDim","visited","style","top","left","width","height","className","onMouseEnter","onMouseUp","React","Component","Searching","createContext","Menu","searching","context","aria-disabled","onClick","reset","bind","start","dijkstra","grid","end","visitedNodes","distance","flattenedGrid","nodes","row","node","push","flatten","length","sortNodesByClosest","closestNeighbour","shift","Infinity","updateUnvisited","sort","nodeOne","nodeTwo","close","unvisited","neighbors","filter","neighbor","getUnvisitedClose","prevNode","contextType","menuClick","SCREEN_WIDTH","Math","floor","window","screen","SCREEN_HEIGHT","BLOCK_DIM","NUM_COLS","NUM_ROWS","endNodeX","endNodeY","Plane","runDijkstra","done","alert","logicalGrid","console","log","addj","Nodes","searched","elementArr","pathFound","p","xF","yF","flag","i","j","setTimeout","shortestPath","document","getElementById","curr","unshift","getFinalPath","notSearching","wallGrid","newGrid","slice","newNode","addWalls","Provider","value","map","nodeId","mouseIsPressed","xPos","yPos","_mouseDown","_mouseOn","_mouseUp","k","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"qUAIqBA,G,wDACjB,WAAYC,GAAQ,IAAD,gCACf,cAAMA,IACDC,OAAL,EAEI,EAAKD,MAFT,kBAFe,E,uDAOP,IAAD,OAEPE,KAAKC,UAAS,SAAAC,GAEN,OAAIA,EAAKC,KAEED,EAEH,EAAKJ,MAAMM,aAAeF,EAAKG,MAExB,CACHC,SAAS,EACTH,MAAM,EACNI,MAAM,EACNC,MAAM,EACNH,OAAO,GAIP,CACIC,SAAS,EACTH,MAAM,EACNK,MAAM,EACND,MAAM,EACNF,OAAO,Q,mCAUrB,IAAD,OACTL,KAAKC,UAAS,SAAAC,GAEN,OAAIA,EAAKC,KACED,EAEH,EAAKJ,MAAMM,aAAeF,EAAKK,KACxB,CACHD,SAAS,EACTH,MAAM,EACNI,MAAM,EACNC,MAAM,EACNH,OAAO,GAIP,CACIC,SAAS,EACTH,MAAM,EACNK,MAAM,EACND,MAAM,EACNF,OAAO,Q,gCAiC/B,OAAOL,KAAKD,MAAMI,O,+BAGZ,IAAD,EAaDH,KAAKF,MAXLW,EAFC,EAEDA,EACAC,EAHC,EAGDA,EAKAC,GARC,EAIDC,GAJC,EAKDT,KALC,EAMDU,QANC,EAODC,MAPC,EAQDH,WACAI,EATC,EASDA,QACAC,EAVC,EAUDA,QACAC,EAXC,EAWDA,SAXC,EAYDC,QAEJ,OAAIlB,KAAKF,MAAMe,QACJ,qBACHM,MAAO,CAACC,IAAKpB,KAAKF,MAAMY,EAAGW,KAAMrB,KAAKF,MAAMW,EAAGa,MAAOL,EAAUM,OAAQN,GACxEO,UAAW,aAAcZ,GAAIZ,KAAKF,MAAMc,GACxCR,YAAa,kBAAMO,EAAUF,EAAGC,IAChCe,aAAc,kBAAMV,EAAQN,EAAGC,IAC/BgB,UAAW,kBAAMV,OAIdhB,KAAKF,MAAMgB,MACX,qBAAKK,MAAO,CAACC,IAAKpB,KAAKF,MAAMY,EAAGW,KAAMrB,KAAKF,MAAMW,EAAGa,MAAOL,EAAUM,OAAQN,GACxEO,UAAW,WAAYZ,GAAIZ,KAAKF,MAAMc,KAC3CZ,KAAKF,MAAMK,KACX,qBACHgB,MAAO,CAACC,IAAKpB,KAAKF,MAAMY,EAAGW,KAAMrB,KAAKF,MAAMW,EAAGa,MAAOL,EAAUM,OAAQN,GACxEO,UAAW,YACXZ,GAAIZ,KAAKF,MAAMc,GACfR,YAAa,kBAAMO,EAAUF,EAAGC,IAChCe,aAAc,kBAAMV,EAAQN,EAAGC,IAC/BgB,UAAW,kBAAMV,OAad,qBACHG,MAAO,CAACC,IAAKpB,KAAKF,MAAMY,EAAGW,KAAMrB,KAAKF,MAAMW,EAAGa,MAAOL,EAAUM,OAAQN,GACxEO,UAAW,OACXZ,GAAIZ,KAAKF,MAAMc,GACfR,YAAa,kBAAMO,EAAUF,EAAGC,IAChCe,aAAc,kBAAMV,EAAQN,EAAGC,IAC/BgB,UAAW,kBAAMV,U,gDA/EGlB,EAAOC,GAEnC,OAAID,EAAMM,YACC,CACHE,SAAS,EACTH,KAAMJ,EAAMI,KACZK,KAAMT,EAAMS,KACZD,KAAMR,EAAMQ,KACZF,OAAO,GAGJ,CACHC,SAAS,EACTH,KAAMJ,EAAMI,KACZK,KAAMT,EAAMS,KACZD,KAAMR,EAAMQ,KACZF,OAAO,O,GAzFWsB,IAAMC,YCF3BC,G,MAAYF,IAAMG,eAAc,ICExBC,E,kDACjB,WAAYjC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTiC,WAAW,GAHA,E,qDASf,OAAGhC,KAAKiC,QAEA,sBAAKT,UAAW,YAAaZ,GAAI,UAAWsB,gBAAe,OAA3D,UAUO,qBAAKV,UAAW,SAAhB,SACC,oBAAIW,QAASnC,KAAKF,MAAMsC,MAAMC,KAAKrC,MAAnC,qBAKJ,qBAAKwB,UAAW,SAAUW,QAASnC,KAAKF,MAAMwC,MAAMD,KAAKrC,MAAOkC,gBAAe,OAA/E,SACI,4CAMR,sBAAKV,UAAW,YAAaZ,GAAI,UAAjC,UAYO,qBAAKY,UAAW,SAAhB,SACC,oBAAIW,QAASnC,KAAKF,MAAMsC,MAAMC,KAAKrC,MAAnC,qBAMJ,qBAAKwB,UAAW,SAAUW,QAASnC,KAAKF,MAAMwC,MAAMD,KAAKrC,MAAzD,SACI,gD,GAvDU4B,aCJnB,SAASW,EAASC,EAAMF,EAAOG,GAG1C,IAAIC,EAAe,GACnBJ,EAAMK,SAAW,EAKjB,IAJA,IAAMC,EA0BV,SAAiBJ,GACb,IADkB,EACZK,EAAQ,GADI,cAEAL,GAFA,IAElB,2BAAwB,CAAC,IAAD,EAAbM,EAAa,sBACDA,GADC,IACpB,2BAAwB,CAAC,IAAdC,EAAa,QACpBF,EAAMG,KAAKD,IAFK,gCAFN,8BAOlB,OAAOF,EAjCeI,CAAQT,GAIxBI,EAAcM,OAAS,GAAE,CAE3BC,EAAmBP,GACnB,IAAMQ,EAAoBR,EAAcS,QAIxC,IAAGD,EAAiBjD,KAApB,CAGA,GAAGiD,EAAiBT,WAAaW,IAC7B,OAAOZ,EAIX,GAFAU,EAAiBlC,SAAU,EAC3BwB,EAAaM,KAAKI,GACfA,IAAqBX,EACpB,OAAOC,EAEXa,EAAgBH,EAAkBZ,KAa1C,SAASW,EAAmBX,GAEvBA,EAAKgB,MAAK,SAACC,EAASC,GAAV,OAAsBD,EAAQd,SAAUe,EAAQf,YAE/D,SAASY,EAAgBI,EAAOnB,GAC5B,IADiC,EAC7BoB,EAOR,SAA2BD,EAAOnB,GAC9B,IAAIqB,EAAY,GACTpD,EAAOkD,EAAPlD,EAAEC,EAAKiD,EAALjD,EAGND,EAAI,GACHoD,EAAUb,KAAKR,EAAK/B,EAAE,GAAGC,IAE1BD,EAAI+B,EAAKU,OAAQ,GAChBW,EAAUb,KAAKR,EAAK/B,EAAE,GAAGC,IAE1BA,EAAI,GACHmD,EAAUb,KAAKR,EAAK/B,GAAGC,EAAE,IAE1BA,EAAI8B,EAAK,GAAGU,OAAQ,GACnBW,EAAUb,KAAKR,EAAK/B,GAAGC,EAAE,IAG7B,OAAOmD,EAAUC,QAAO,SAAAC,GAAQ,OAAKA,EAAS7C,WAzB9B8C,CAAkBL,EAAOnB,GADR,cAEboB,GAFa,IAEjC,IAAI,EAAJ,qBAA8B,CAAC,IAAvBG,EAAsB,QAC1BA,EAASpB,SAAWgB,EAAMhB,SAAW,EAErCoB,EAASE,SAAWN,GALS,+BDxChB5B,EAOVmC,YAAcrC,E,MECVsC,ICJTC,EAAeC,KAAKC,MAA0B,GAApBC,OAAOC,OAAOlD,OACxCmD,EAAgBJ,KAAKC,MAA2B,GAArBC,OAAOC,OAAOjD,QACzCmD,EAAYL,KAAKC,MAAsB,IAAhBG,GACvBE,EAAWN,KAAKC,MAAMF,EAAeM,GACrCE,EAAWP,KAAKC,MAAMG,EAAgBC,GAGxCG,EAAWR,KAAKC,MAAOF,EAAgBM,GAAa,EACpDI,EAAWT,KAAKC,MAAOG,EAAiBC,GAAa,EAKpCK,E,kDAEjB,WAAYjF,GAAQ,IAAD,8BACf,cAAMA,IAEDsC,MAAQ,EAAKA,MAAMC,KAAX,gBACb,EAAKC,MAAQ,EAAK0C,YAAY3C,KAAjB,gBACb,EAAKtC,MAAQ,CACTY,WAAW,EACX6B,KAAM,GACNyC,MAAM,EACNjD,WAAW,GATA,E,gEAefkD,MAAM,mTAMN,IAAM1C,EAAO2C,IACbnF,KAAKC,SAAS,CAACuC,W,8BAIV,IAAD,OACJ4C,QAAQC,IAAI,SAEZrF,KAAKC,SAAS,CAACuC,KAAM2C,MAAgB,WACjCC,QAAQC,IAAI,EAAKtF,MAAMyC,SAE3B4C,QAAQC,IAAIF,IAAenF,KAAKD,MAAMyC,Q,oCAG3B,IAAD,OACVxC,KAAKC,SAAS,CAAC+B,WAAW,IAM1B,IALA,IAAIsD,EAAO,GACLC,EAAQvF,KAAKD,MAAMyC,KACrBgD,EAAWjD,EAASvC,KAAKD,MAAMyC,KAAMxC,KAAKD,MAAMyC,KAjD3C,GACA,GAgDyExC,KAAKD,MAAMyC,KAAKqC,GAAUC,IACxGW,EAAa,GACXC,GAAcF,EAASA,EAAStC,OAAS,GAAGpC,MANxC,WAOD6E,GACLL,IARM,MASSE,EAASG,GAAjBlF,EATD,EASCA,EAAGC,EATJ,EASIA,EACV,GAAI8E,EAASG,GAAGzE,QAAS,CAIrB,IAHA,IACI0E,EACAC,EAFAC,GAAO,EAGFC,EAAI,EAAGA,EAAIR,EAAMrC,OAAQ6C,IAAK,CACnC,IAAK,IAAIC,EAAI,EAAGA,EAAIT,EAAMQ,GAAG7C,OAAQ8C,IACjC,GAAID,IAAMtF,GAAKuF,IAAMtF,EAAG,CACpBoF,GAAO,EACPF,EAAKG,EACLF,EAAKG,EACL,MAIR,GAAIF,EACA,MAIRG,YAAW,WAUP,GATIN,IAAMH,EAAStC,OAAS,GACxB,EAAKgD,eAGJV,EAASG,GAAG7E,OAAU0E,EAASG,GAAG9E,UACnC4E,EAAWzC,KAAM4C,EAAK,IAAMC,GAE5BM,SAASC,eAAeR,EAAK,IAAMC,GAAIrE,UAAY,gBAEnDmE,IAAMH,EAAStC,OAAS,GAAKwC,EAAW,CAAC,IAAD,gBAC1BD,GAD0B,IACxC,2BAA0B,CAAC,IAAlBhF,EAAiB,QAEtB0F,SAASC,eAAe3F,GAAGe,UAAY,aAHH,kCAO7C,GAAK8D,KAvCPK,EAAI,EAAGA,EAAIH,EAAStC,OAAQyC,IAAM,EAAlCA,K,6EAkDT,IAFY,IAAD,OACP9C,EFzCL,SAAsBJ,GAGzB,IAFA,IAAMI,EAAQ,GACVwD,EAAO5D,EACI,OAAT4D,GAEFxD,EAAMyD,QAAQD,GACdA,EAAOA,EAAKpC,SAEhB,OAAOpB,EEiCS0D,CAAavG,KAAKD,MAAMyC,KAAKqC,GAAUC,IADxC,WAEFiB,GACLE,YAAW,WAEFpD,EAAMkD,GAAGlF,SAAYgC,EAAMkD,GAAGjF,QAC/BqF,SAASC,eAAevD,EAAMkD,GAAGtF,EAAI,IAAMoC,EAAMkD,GAAGrF,GAAGc,UAAY,YAE3E,EAAKgF,iBACF,aAAOT,EAAK,IACXA,IAAMlD,EAAMK,OAAS,GACrB,EAAKjD,SAAS,CAACgF,MAAM,KATpBc,EAAI,EAAGA,EAAIlD,EAAMK,OAAQ6C,IAAM,EAA/BA,K,mCAgBT/F,KAAKC,SAAS,CAACU,WAAW,M,iCAI1BX,KAAKC,SAAS,CAACU,WAAW,M,+BAGrBF,EAAGC,GACR,GAAIV,KAAKD,MAAMY,WAAgE,SAAnDwF,SAASC,eAAe3F,EAAI,IAAMC,GAAGc,UAAjE,CACI,IAAMiF,EAgFlB,SAAkBjE,EAAM/B,EAAGC,GACvB,IAAMgG,EAAUlE,EAAKmE,QACjB5D,EAAO2D,EAAQjG,GAAGC,GAClBkG,EAAO,2BACJ7D,GADI,IAEP5C,MAAM,IAGV,OADAuG,EAAQjG,GAAGC,GAAKkG,EACTF,EAxFkBG,CAAS7G,KAAKD,MAAMyC,KAAM/B,EAAGC,GAC9CV,KAAKC,SAAS,CAACwG,WAAU9F,WAAW,O,+BAMlC,IAAD,SACqBX,KAAKD,MAAxByC,EADF,EACEA,KAAM7B,EADR,EACQA,UACb,OAEI,eAACkB,EAAUiF,SAAX,CAAoBC,MAAO/G,KAAKD,MAAMiC,UAAtC,UAEQ,cAAC,EAAD,CAAMM,MAAOtC,KAAKsC,MAAOF,MAAOpC,KAAKoC,QAEzC,qBAAKZ,UAAW,iBAAhB,SAEQgB,EAAKwE,KAAI,SAAClE,EAAKlC,GACX,OAAOkC,EAAIkE,KAAI,SAACjE,EAAMkE,GAAY,IACrBxG,EAAuCsC,EAAvCtC,EAAGC,EAAoCqC,EAApCrC,EAAGG,EAAiCkC,EAAjClC,QAASC,EAAwBiC,EAAxBjC,MAAOX,EAAiB4C,EAAjB5C,KAAMe,EAAW6B,EAAX7B,QAKjC,OAAQ,cAAC,EAAD,CAEJT,EAAGA,EAAIiE,EACPhE,EAAGA,EAAIgE,EACP9D,GAAIH,EAAI,IAAMC,EACdG,QAASA,EACTC,MAAOA,EACPX,KAAMA,EACNc,SAAUyD,EACVwC,eAAgBvG,EAChBA,UAAW,SAACwG,EAAMC,GAAP,OAAgB,EAAKC,WAAW5G,EAAGC,IAC9CK,QAAS,SAACoG,EAAMC,GAEZ,EAAKE,SAAS7G,EAAGC,IAErBM,QAAS,kBAAM,EAAKuG,YACpBrG,QAAWA,GAfNT,EAAI,IAAMC,kB,GAhJpBiB,IAAMC,WA2LrCuD,EAAc,WAEd,IADA,IAfiB1E,EAAGC,EAehB8B,EAAO,GACFgF,EAAI,EAAGA,EAAI7C,EAAU6C,GAAK,EAAG,CAElC,IADA,IAAI1E,EAAM,GACD6C,EAAI,EAAGA,EAAIf,EAAUe,GAAK,EAC/B7C,EAAIE,KAlBJ,CACJvC,EAFaA,EAmBY+G,EAhBzB9G,EAHgBA,EAmBYiF,EAf5B9E,QAzLS,IAyLAJ,GAxLA,IAwLoBC,EAC7BI,MAAOL,IAAMoE,GAAYnE,IAAMoE,EAC/B5D,SAAS,EACTf,MAAM,EACN8D,SAAU,KACVtB,SAAUW,MAYVd,EAAKQ,KAAKF,GAEd,OAAON,G,ICpNUiF,E,uKAMb,OACI,8BAEI,cAAC,EAAD,U,GATiB9F,IAAMC,WCOxB8F,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,EAAD,IACAjC,SAASC,eAAe,SAG1BsB,M","file":"static/js/main.71c886e2.chunk.js","sourcesContent":["import React from 'react';\nimport \"./Node.css\"\n\n\nexport default class Node extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        } = this.props;\n    }\n\n    _mouseMv() {\n\n        this.setState(past => {\n                // console.log(past)\n                if (past.wall) {\n\n                    return past\n                } else {\n                    if (this.props.onMouseDown && past.click) {\n\n                        return {\n                            checked: false,\n                            wall: true,\n                            over: true,\n                            move: true,\n                            click: true\n                        }\n                    } else {\n                        return (\n                            {\n                                checked: false,\n                                wall: false,\n                                move: true,\n                                over: false,\n                                click: false\n                            }\n                        )\n                    }\n                }\n\n            }\n        );\n    }\n\n    _mouseOver() {\n        this.setState(past => {\n                // console.log(past)\n                if (past.wall) {\n                    return past\n                } else {\n                    if (this.props.onMouseDown && past.over) {\n                        return {\n                            checked: false,\n                            wall: true,\n                            over: true,\n                            move: true,\n                            click: true\n                        }\n                    } else {\n                        return (\n                            {\n                                checked: false,\n                                wall: false,\n                                move: false,\n                                over: true,\n                                click: false\n                            }\n                        )\n                    }\n                }\n\n            }\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        // console.log(props)\n        if (props.onMouseDown) {\n            return {\n                checked: false,\n                wall: state.wall,\n                move: state.move,\n                over: state.over,\n                click: true\n            }\n        } else {\n            return {\n                checked: false,\n                wall: state.wall,\n                move: state.move,\n                over: state.over,\n                click: false\n            }\n        }\n\n    }\n\n    getWall() {\n        return this.state.wall;\n    }\n\n    render() {\n        const {\n            x,\n            y,\n            id,\n            wall,\n            isStart,\n            isEnd,\n            mouseDown,\n            mouseOn,\n            mouseUp,\n            blockDim,\n            visited,\n        } = this.props;\n        if (this.props.isStart) {\n            return <div\n                style={{top: this.props.y, left: this.props.x, width: blockDim, height: blockDim}}\n                className={\"node-start\"} id={this.props.id}\n                onMouseDown={() => mouseDown(x, y)}\n                onMouseEnter={() => mouseOn(x, y)}\n                onMouseUp={() => mouseUp()}\n            />\n\n\n        } else if (this.props.isEnd) {\n            return <div style={{top: this.props.y, left: this.props.x, width: blockDim, height: blockDim}}\n                        className={\"node-end\"} id={this.props.id}/>\n        } else if (this.props.wall) {\n            return <div\n                style={{top: this.props.y, left: this.props.x, width: blockDim, height: blockDim}}\n                className={\"node-wall\"}\n                id={this.props.id}\n                onMouseDown={() => mouseDown(x, y)}\n                onMouseEnter={() => mouseOn(x, y)}\n                onMouseUp={() => mouseUp()}\n            />\n        } /*else if (visited) {\n            return <div\n                style={{top: this.props.y, left: this.props.x, width: blockDim, height: blockDim}}\n                className={\"node-visited\"}\n                id={this.props.id}\n                onMouseDown={() => mouseDown(x, y)}\n                onMouseEnter={() => mouseOn(x, y)}\n                onMouseUp={() => mouseUp()}\n            />\n        }*/\n         else {\n            return <div\n                style={{top: this.props.y, left: this.props.x, width: blockDim, height: blockDim}}\n                className={\"node\"}\n                id={this.props.id}\n                onMouseDown={() => mouseDown(x, y)}\n                onMouseEnter={() => mouseOn(x, y)}\n                onMouseUp={() => mouseUp()}\n            />\n        }\n    }\n\n}","import React from \"react\";\n\nexport const Searching = React.createContext(false);","import React, {Component} from 'react';\nimport \"./Node.css\"\nimport \"./Menu.css\"\nimport {Searching} from \"./searchingContext\";\nexport default class Menu extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            searching: false,\n        }\n    }\n    static contextType = Searching;\n\n    render() {\n        if(this.context){\n            return (\n                <div className={\"menu-bar \"} id={\"options\"} aria-disabled={\"true\"}>\n                    {/*     <div className={\"option\"} aria-disabled={\"true\"}>\n                        <h1>Dijkstra</h1>\n                    </div>\n                    <div className={\"option\"} aria-disabled={\"true\"}>\n                        <h1>Search 2</h1>\n                    </div>\n                    <div className={\"option\"}>\n                        <h1>Search 3</h1>\n                    </div >\n                    */}<div className={\"option\"}>\n                        <h1 onClick={this.props.reset.bind(this)}>Reset</h1>\n                    </div>{/*\n                    <div className={\"option\"} aria-disabled={\"true\"}>\n                        <h1>Settings</h1>\n                    </div>*/}\n                    <div className={\"option\"} onClick={this.props.start.bind(this)} aria-disabled={\"true\"}>\n                        <h1>Start</h1>\n                    </div>\n                </div>\n            );\n        }else{\n            return (\n                <div className={\"menu-bar \"} id={\"options\"}>\n                 {/*   <div className={\"option\"}>\n                        <h1>Dijkstra</h1>\n                    </div>\n\n                    <div className={\"option\"}>\n                        <h1>Search 2</h1>\n                    </div>\n                    <div className={\"option\"}>\n                        <h1>Search 3</h1>\n                    </div >\n\n                   */ }<div className={\"option\"}>\n                        <h1 onClick={this.props.reset.bind(this)}>Reset</h1>\n                    </div>{/*\n                    <div className={\"option\"}>\n                        <h1>Settings</h1>\n                    </div>\n                    */}\n                    <div className={\"option\"} onClick={this.props.start.bind(this)}>\n                        <h1>Start</h1>\n                    </div>\n                </div>\n            );\n        }\n        return (\n            <div className={\"menu-bar \"} id={\"options\"}>\n                <div className={\"option\"}>\n                    <h1>Dijkstra</h1>\n                </div>\n                <div className={\"option\"}>\n                    <h1>Search 2</h1>\n                </div>\n                <div className={\"option\"}>\n                    <h1>Search 3</h1>\n                </div >\n                <div className={\"option\"}>\n                    <h1 onClick={this.props.reset.bind(this)}>Reset</h1>\n                </div>\n                <div className={\"option\"}>\n                    <h1>Settings</h1>\n                </div>\n                <div className={\"option\"} onClick={this.props.start.bind(this)}>\n                    <h1>Start</h1>\n                </div>\n            </div>\n        );\n    }\n}","export default function dijkstra(grid, start, end){\n    // console.log(start);\n    // console.log(grid);\n    let visitedNodes = []\n    start.distance = 0;\n    const flattenedGrid = flatten(grid);\n\n    // console.log(flattenedGrid);\n\n    while(flattenedGrid.length > 0){\n        // console.log(flattenedGrid.length);\n        sortNodesByClosest(flattenedGrid);\n        const closestNeighbour =  flattenedGrid.shift();\n        // console.log(closestNeighbour)\n        // console.log(closestNeighbour);\n        // console.log(visitedNodes);\n        if(closestNeighbour.wall){\n            continue;\n        }\n        if(closestNeighbour.distance === Infinity){\n            return visitedNodes;\n        }\n        closestNeighbour.visited = true;\n        visitedNodes.push(closestNeighbour);\n        if(closestNeighbour === end){\n            return visitedNodes;\n        }\n        updateUnvisited(closestNeighbour, grid);\n    }\n}\n\nfunction flatten(grid){\n    const nodes = [];\n    for (const row of grid) {\n        for (const node of row) {\n            nodes.push(node);\n        }\n    }\n    return nodes;\n}\nfunction sortNodesByClosest(grid){\n\n     grid.sort((nodeOne, nodeTwo) => nodeOne.distance -nodeTwo.distance)\n}\nfunction updateUnvisited(close, grid){\n    let unvisited = getUnvisitedClose(close, grid);\n    for(let neighbor of unvisited){\n        neighbor.distance = close.distance + 1;\n        // console.log(neighbor.distance);\n        neighbor.prevNode = close;\n    }\n}\nfunction getUnvisitedClose(close, grid){\n    let neighbors = [];\n    const {x,y} = close;\n    // console.log(close);\n    // console.log(grid);\n    if(x > 0){\n        neighbors.push(grid[x-1][y]);\n    }\n    if(x < grid.length- 1){\n        neighbors.push(grid[x+1][y]);\n    }\n    if(y > 0){\n        neighbors.push(grid[x][y-1]);\n    }\n    if(y < grid[0].length- 1){\n        neighbors.push(grid[x][y+1]);\n    }\n    // console.log(neighbors)\n    return neighbors.filter(neighbor => !neighbor.visited);\n}\n\nexport function getFinalPath(end){\n    const nodes = []\n    let curr = end;\n    while(curr !== null){\n        // console.log(curr.prevNode)\n        nodes.unshift(curr);\n        curr = curr.prevNode;\n    }\n    return nodes;\n}","\n\nfunction menuClick(){\n    let options = document.getElementById('options')\n    console.log(options)\n    if(options.style.display === \"block\"){\n        options.style.display = \"none\";\n    }else{\n        options.style.display = \"block\"\n    }\n}\n\nexport default menuClick;","import React from 'react';\nimport Node from \"./Node\";\nimport Menu from \"./Menu\"\nimport dijkstra, {getFinalPath} from \"../algorithms/dijkstra.js\"\nimport \"../fonts/font-awesome-4.7.0/css/font-awesome.css\";\nimport menuClick from \"../functions/menuClick\";\nimport {Searching} from \"./searchingContext\";\n// let Nodes = [];\nconst SCREEN_WIDTH = Math.floor(window.screen.width*0.9);\nconst SCREEN_HEIGHT = Math.floor(window.screen.height*0.8);\nconst BLOCK_DIM = Math.floor(SCREEN_HEIGHT * 0.06);\nconst NUM_COLS = Math.floor(SCREEN_WIDTH / BLOCK_DIM);\nconst NUM_ROWS = Math.floor(SCREEN_HEIGHT / BLOCK_DIM);\nlet startNodeX = 0;\nlet startNodeY = 0;\nlet endNodeX = Math.floor((SCREEN_WIDTH) / BLOCK_DIM) - 1;\nlet endNodeY = Math.floor((SCREEN_HEIGHT) / BLOCK_DIM) - 1;\n\n\n\n\nexport default class Plane extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.reset = this.reset.bind(this)\n        this.start = this.runDijkstra.bind(this)\n        this.state = {\n            mouseDown: false,\n            grid: [],\n            done: false,\n            searching: false,\n        }\n\n    }\n\n    componentDidMount() {\n        alert(\"Notes: \\n \" +\n            \"1. Click and drag to draw walls \\n\" +\n            \"2. Click start to begin search process \\n\" +\n            \"3. The dimensions may not be correct for your screen. End node may be off screen \\n\" +\n            \"4. This project is was my first react project and still needs much work which I will get to when I have time off university \\n\" +\n            \"5. Enjoy!\")\n        const grid = logicalGrid();\n        this.setState({grid});\n    }\n\n\n    reset() {\n        console.log(\"reset\")\n        // let grid = logicalGrid();\n        this.setState({grid: logicalGrid()}, ()=>{\n            console.log(this.state.grid);\n        });\n        console.log(logicalGrid(), this.state.grid)\n    }\n\n    runDijkstra() {\n        this.setState({searching: true})\n        let addj = 10;\n        const Nodes = this.state.grid;\n        let searched = dijkstra(this.state.grid, this.state.grid[startNodeX][startNodeY], this.state.grid[endNodeX][endNodeY]);\n        let elementArr = [];\n        const pathFound = !(searched[searched.length - 1].isEnd);\n        for (let p = 0; p < searched.length; p++) {\n            addj++;\n            const {x, y} = searched[p];\n            if (searched[p].visited) {\n                let flag = false;\n                let xF;\n                let yF;\n                for (let i = 0; i < Nodes.length; i++) {\n                    for (let j = 0; j < Nodes[i].length; j++) {\n                        if (i === x && j === y) {\n                            flag = true;\n                            xF = i;\n                            yF = j;\n                            break;\n                        }\n\n                    }\n                    if (flag) {\n                        break;\n                    }\n                }\n\n                setTimeout(() => {\n                    if (p === searched.length - 1) {\n                        this.shortestPath();\n                    }\n\n                    if (!searched[p].isEnd && !searched[p].isStart) {\n                        elementArr.push((xF + \" \" + yF));\n\n                        document.getElementById(xF + \" \" + yF).className = \"node-visited\";\n                    }\n                    if (p === searched.length - 1 && pathFound) {\n                        for (let x of elementArr) {\n                            //console.log(elementArr,x)\n                            document.getElementById(x).className = \"not-found\";\n                        }\n                    }\n\n                }, 10 * addj)\n            }\n\n        }\n\n    }\n    notSearching(){\n        // this.setState({searching: false})\n    }\n    shortestPath() {\n        let nodes = getFinalPath(this.state.grid[endNodeX][endNodeY]);\n        for (let i = 0; i < nodes.length; i++) {\n            setTimeout(() => {\n                // console.log(nodes[i].x + \" \" + nodes[i].y)\n                if (!nodes[i].isStart && !nodes[i].isEnd) {\n                    document.getElementById(nodes[i].x + \" \" + nodes[i].y).className = \"node-fin\";\n                }\n            this.notSearching();\n            }, 100 * (i ** 1));\n            if (i === nodes.length - 1) {\n                this.setState({done: true});\n            }\n        }\n\n    }\n\n    _mouseDown() {\n        this.setState({mouseDown: true})\n    }\n\n    _mouseUp() {\n        this.setState({mouseDown: false})\n    }\n\n    _mouseOn(x, y) {\n        if (this.state.mouseDown && document.getElementById(x + \" \" + y).className === \"node\") {\n            const wallGrid = addWalls(this.state.grid, x, y);\n            this.setState({wallGrid, mouseDown: true})\n        } else {\n            return;\n        }\n    }\n\n    render() {\n        const {grid, mouseDown} = this.state;\n        return (\n\n            <Searching.Provider value={this.state.searching}>\n                {/*<div id={\"hamburger\"} onClick={menuClick.bind(this)} className={\"fa fa-bars\"}>*/}\n                    <Menu start={this.start} reset={this.reset} />\n                {/*</div>*/}\n                <div className={\"node-container\"}>\n                    {\n                        grid.map((row, id) => {\n                            return row.map((node, nodeId) => {\n                                    let {x, y, isStart, isEnd, wall, visited} = node;\n                                    let xPos = x;\n                                    let yPos = y;\n                                    // console.log(x,y)\n\n                                    return (<Node\n                                        key={x + \" \" + y}\n                                        x={x * BLOCK_DIM}\n                                        y={y * BLOCK_DIM}\n                                        id={x + \" \" + y}\n                                        isStart={isStart}\n                                        isEnd={isEnd}\n                                        wall={wall}\n                                        blockDim={BLOCK_DIM}\n                                        mouseIsPressed={mouseDown}\n                                        mouseDown={(xPos, yPos) => this._mouseDown(x, y)}\n                                        mouseOn={(xPos, yPos) => {\n                                            // console.log(x,y);\n                                            this._mouseOn(x, y);\n                                        }}\n                                        mouseUp={() => this._mouseUp()}\n                                        visited = {visited}\n                                    />)\n                                }\n                            )\n                        })\n                    }\n                </div>\n            </Searching.Provider>\n        );\n    }\n\n\n}\n\nconst logicalNode = (x, y) => {\n    return ({\n        x,\n        y,\n        isStart: x === startNodeX && y === startNodeY,\n        isEnd: x === endNodeX && y === endNodeY,\n        visited: false,\n        wall: false,\n        prevNode: null,\n        distance: Infinity,\n    });\n\n}\n\nlet logicalGrid = () => {\n    let grid = [];\n    for (let k = 0; k < NUM_COLS; k += 1) {\n        let row = []\n        for (let p = 0; p < NUM_ROWS; p += 1) {\n            row.push(logicalNode(k, p))\n        }\n        grid.push(row);\n    }\n    return grid;\n}\n\nfunction addWalls(grid, x, y) {\n    const newGrid = grid.slice();\n    let node = newGrid[x][y];\n    let newNode = {\n        ...node,\n        wall: true\n    }\n    newGrid[x][y] = newNode;\n    return newGrid\n}\n","import './App.css';\nimport Plane from \"./components/Plane\";\nimport React from 'react';\n\n\nexport default class App extends React.Component{\n\n\n\n    render() {\n\n        return (\n            <div >\n\n                <Plane />\n            </div>\n        );\n    }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}